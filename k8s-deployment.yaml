---
apiVersion: v1
kind: Namespace
metadata:
  name: myapp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: myapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: cybergiant/progetto_cas-frontend:v1 # Cambia con il tag dell'immagine
        ports:
          - containerPort: 3000
        env:
          - name: NODE_ENV
            value: "production"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: myapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: cybergiant/progetto_cas-backend:v1 # Cambia con il tag dell'immagine
        ports:
          - containerPort: 4000
        env:
          - name: NODE_ENV
            value: "production"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 4000
          initialDelaySeconds: 10
          periodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: myapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: db
        image: postgis/postgis:16-3.4-alpine
        ports:
          - containerPort: 5432
        env:
          - name: POSTGRES_USER
            value: "postgres"
          - name: POSTGRES_PASSWORD
            value: "postgres"
          - name: POSTGRES_DB
            value: "postgres"
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: pgdata
        livenessProbe:
          exec:
            command:
              - "pg_isready"
              - "-U"
              - "postgres"
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: pgdata
        persistentVolumeClaim:
          claimName: pgdata-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgdata-pvc
  namespace: myapp
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
